[tool.poetry]
name = "qtgql"
version = "0.1.0"
packages = [{ include = "qtgql" }]
description = "Qt framework for building graphql driven QML applications"
authors = ["Nir <88795475+nrbnlulu@users.noreply.github.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
PySide6 = ">=6.4.1"
nothing = "^0.0.3"


[tool.poetry.group.dev.dependencies]
pytest-qt = "^4.2.0"
pytest-cov = "^4.0.0"
pre-commit = "^2.20.0"
strawberry-graphql = ">=0.142.2"
aiohttp = {extras = ["speedups"], version = "^3.8.3"}
mypy = "^0.991"
faker = "^15.3.4"
mkdocs-material = "^9.0.6"
mike = "^1.1.2"
markdown-include = "^0.8.0"
mkdocstrings = {extras = ["python"], version = "^0.19.1"}
pygments = "^2.14.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"



[tool.mypy]
plugins = ['qtgql/ext/mypy_plugin.py']
ignore_missing_imports = "True"


[tool.black]
line-length = 100
target-version = ['py310']
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | __pycached__
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
select = ["E", "F", "ERA", "I"]
ignore = [
    "TID252",
    "E501",  # line too long, handled by black
]
fix = true

src = ["qtgql", "tests"]


[tool.pytest.ini_options]
addopts = "--cov-config=pyproject.toml "
markers = [
    "no_captcha: This test requires that `LOGIN_REQUIRE_CAPTCHA=False` on the server",
]
[tool.coverage.run]
omit = ['test_*', 'tests/*', 'qtgql/ext/*']
relative_files = true

[tool.coverage.report]
show_missing = true
fail_under = 95
